{"name":"Angular-smart-timeago","tagline":"An angular wrapper of jquery plugin smart-time-ago","body":"### Installation\r\nYou can choose your preferred method of installation:\r\n- Through bower `bower install angular-moment --save`\r\n- Download from GitHub [angular-smart-timeago.js](https://raw.githubusercontent.com/loveky/angular-smart-timeago/master/src/angular-smart-timeago.js)\r\n\r\n### Usage\r\nInclude both timeago.js and angular-smart-timeago.js in your application.\r\n\r\n```html\r\n<script src=\"components/smart-time-ago/lib/timeago.js\"></script>\r\n<script src=\"components/angular-smart-timeago/src/angular-smart-timeago.js\"></script>\r\n```\r\n\r\nAdd the module `ngSmartTimeago` as a dependency to your app module:\r\n\r\n```js\r\nvar myapp = angular.module('myapp', ['ngSmartTimeago']);\r\n```\r\n\r\n### Timeago directive\r\nYou can use `timeago` directive to display a user friendly time. By default, smart-time-ago will check the\r\n```html\r\n<timeago datetime=\"2014-05-28T18:01:50Z+0800\"></timeago>\r\n```\r\n\r\nIf you are using another property to specify the ISO8601 time string other than `datatime`, you can tell the directive which property you are using by `attr` property:\r\n```html\r\n<timeago attr=\"datastring\" datestring=\"2014-05-28T18:01:50Z+0800\"></timeago>\r\n```\r\n\r\n### Configuration\r\nIf you want to change the default property name which specifies the ISO8601 time string for all directive instance. You can do it with:\r\n\r\n```js\r\nangular.module('myapp').constant('ngSmartTimeagoConfig', {\r\n\tattr: 'datastring'\r\n});\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}